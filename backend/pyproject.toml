[tool.poetry]
name = "hackathon_nao_server"
version = "0.1.0"
description = ""
authors = ["Arthur Alvim <eu@arthuralvim.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
django = "^5.0.6"
drf-yasg = "^1.21.7"
python-decouple = "^3.8"
psycopg2-binary = "^2.9.9"
dj-database-url = "^2.2.0"
gunicorn = "^22.0.0"
django-filter = "^24.2"
djangorestframework = "^3.15.2"
setuptools = "^70.3.0"
django-cors-headers = "^4.4.0"
openai = "^1.43.0"
google-generativeai = "^0.7.2"
ollama = "^0.3.2"
pillow = "^10.4.0"
drf-extra-fields = "^3.7.0"
fleep = "^1.0.1"

[tool.poetry.group.dev.dependencies]
ipdb = "^0.13.13"
pytest-cov = "^5.0.0"
pytest-django = "^4.8.0"
factory-boy = "^3.3.0"
pytest-drf = "^1.1.3"
pytest-recording = "^0.13.2"

[tool.coverage.run]
source = [
    "."
]
branch = true
omit = [
  "*__init__.py",
  "**/apps.py",
  "*urls.py",
  "*wsgi.py",
  "*asgi.py",
  "**/migrations/*",
  "**/tests/*",
  "*tests*",
  "**/tests.py",
  "manage.py",
  "conftest.py",
  "gunicorn_conf.py",
  "settings.py"
]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "hackathon_nao.settings"
addopts = "--reuse-db"

[tool.black]
line-length = 120
target-version = ['py312']
include = '\.pyi?$'

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
